<?xml version="1.0"?>
<launch>
	<arg name ="arg_x" default="0.00"/>	
	<arg name ="arg_y" default="0.00"/>	
	<arg name ="arg_z" default="0.00"/>	
	<arg name ="arg_R" default="0.00"/>	
	<arg name ="arg_P" default="0.00"/>	
	<arg name ="arg_Y" default="0.00"/>	
	
	<!--URDF-->
	<param name="robot_description" textfile="$(find elissa3_homer)/urdf/homer.urdf" />
  
  	<!-- Gazebo empty world-->
  	<include file="$(find gazebo_ros)/launch/empty_world.launch"/>
  	<node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />
  	
  	<!--Spawn Model-->
  	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model homer -J joint_1 0.0 -J joint_2 0.0"/>
  	
  	<!--Load and Launch trajectory controller-->
  	<rosparam file ="$(find elissa3_homer)/config/arm_control.yaml" command="load"/>
  
  	<node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller arm_controller" respawn="false" output="screen"/>
  	
  	<!--rosparam command="load" file="$(find elissa3_homer)/config/joint_state_controller.yaml" />
  	<node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/-->
  	
  	<!--Robot State Publisher -> Rviz can visualze it-->
  	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
  	
</launch>
