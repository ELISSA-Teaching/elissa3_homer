<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

  -->

  <xacro:include filename="$(find homer_description)/urdf/inc/homer_transmissions.xacro" />
  <xacro:include filename="$(find homer_description)/urdf/inc/homer_common.xacro" />

  <xacro:macro name="homer_robot" params="
    prefix
    joint_limits_parameters_file
    kinematics_parameters_file
    physical_parameters_file
    visual_parameters_file
    transmission_hw_interface:=hardware_interface/PositionJointInterface
    safety_limits:=false
    safety_pos_margin:=0.15
    safety_k_position:=20"
  >
    <!-- Load configuration data from the provided .yaml files -->
    <xacro:read_model_data
      joint_limits_parameters_file="${joint_limits_parameters_file}" 
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"/>

    <!-- Add URDF transmission elements (for ros_control) -->
    <xacro:homer_arm_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}" />

    <!-- links: main serial chain -->
    <link name="${prefix}base_link"/>
    <link name="${prefix}base_link_inertia">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${base_link_visual_mesh}"/>
        </geometry>
        <material name="${base_link_visual_material_name}">
          <color rgba="${base_link_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${base_link_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${base_link_inertia_radius}" length="${base_link_inertia_length}" mass="${base_link_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_1">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_1_visual_mesh}"/>
        </geometry>
        <material name="${link_1_visual_material_name}">
          <color rgba="${link_1_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_1_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_1_inertia_radius}" length="${link_1_inertia_length}" mass="${link_1_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_2">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="${link_2_visual_mesh}"/>
        </geometry>
        <material name="${link_2_visual_material_name}">
          <color rgba="${link_2_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="${link_2_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_2_inertia_radius}" length="${link_2_inertia_length}" mass="${link_2_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_3">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_3_visual_mesh}"/>
        </geometry>
        <material name="${link_3_visual_material_name}">
          <color rgba="${link_3_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_3_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_3_inertia_radius}" length="${link_3_inertia_length}"  mass="${link_3_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_4">
      <visual>
        <!-- TODO: Move this to a parameter -->
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="${link_4_visual_mesh}"/>
        </geometry>
        <material name="${link_4_visual_material_name}">
          <color rgba="${link_4_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="${link_4_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_4_inertia_radius}" length="${link_4_inertia_length}"  mass="${link_4_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_5">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_5_visual_mesh}"/>
        </geometry>
        <material name="${link_5_visual_material_name}">
          <color rgba="${link_5_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_5_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_5_inertia_radius}" length="${link_5_inertia_length}"  mass="${link_5_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_6">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="${link_6_visual_mesh}"/>
        </geometry>
        <material name="${link_6_visual_material_name}">
          <color rgba="${link_6_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="${link_6_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_6_inertia_radius}" length="${link_6_inertia_length}"  mass="${link_6_mass}">
        <origin xyz="0.0 0.0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_7">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_7_visual_mesh}"/>
        </geometry>
        <material name="${link_7_visual_material_name}">
          <color rgba="${link_7_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${link_7_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_7_inertia_radius}" length="${link_7_inertia_length}"  mass="${link_7_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}link_8">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="${link_8_visual_mesh}"/>
        </geometry>
        <material name="${link_8_visual_material_name}">
          <color rgba="${link_8_visual_material_color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="${link_8_collision_mesh}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${link_8_inertia_radius}" length="${link_8_inertia_length}"  mass="${link_8_mass}">
        <origin xyz="0.0 0.0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <!-- joints: main serial chain -->
    <joint name="${prefix}base_link-base_link_inertia" type="fixed">
      <parent link="${prefix}base_link" />
      <child link="${prefix}base_link_inertia" />
  
      <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
      <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    <joint name="${prefix}joint_1" type="revolute">
      <parent link="${prefix}base_link" />
      <child link="${prefix}link_1" />
      <origin xyz="0 0 25" rpy="0 -0.7854 0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_2" type="revolute">
      <parent link="${prefix}link_1" />
      <child link="${prefix}link_2" />
      <origin xyz="35.355 0 35.355" rpy="0 1.5708 0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_3" type="revolute">
      <parent link="${prefix}link_2" />
      <child link="${prefix}link_3" />
      <origin xyz="-35.355 0 35.355" rpy="0 -1.5708  0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_4" type="revolute">
      <parent link="${prefix}link_3" />
      <child link="${prefix}link_4" />
      <origin xyz="35.355 0 35.355" rpy="0 1.5708 0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_5" type="revolute">
      <parent link="${prefix}link_4" />
      <child link="${prefix}link_5" />
      <origin xyz="-35.355 0 35.355" rpy="0 -1.5708 0"/>
      <axis xyz="0 0 1" />
     <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_6" type="revolute">
      <parent link="${prefix}link_5" />
      <child link="${prefix}link_6" />
      <origin xyz="35.355 0 35.355" rpy="0 1.5708 0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_7" type="revolute">
      <parent link="${prefix}link_6" />
      <child link="${prefix}link_7" />
      <origin xyz="-35.355 0 35.355" rpy="0 -1.5708 0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}joint_8" type="revolute">
      <parent link="${prefix}link_7" />
      <child link="${prefix}link_8" />
      <origin xyz="35.355 0 35.355" rpy="0 1.5708 0"/>
      <axis xyz="0 0 1" />
      <limit effort="300" velocity="2.0" lower="-6" upper="6"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="-3" soft_upper_limit="3" k_position="0" k_velocity="1.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>


    <link name="${prefix}flange" />
    <joint name="${prefix}link_8-flange" type="fixed">
      <parent link="${prefix}link_8" />
      <child link="${prefix}flange" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>

    <link name="${prefix}tool0"/>
    <joint name="${prefix}flange-tool0" type="fixed">
      <!-- default toolframe: X+ left, Y+ up, Z+ front -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}flange"/>
      <child link="${prefix}tool0"/>
    </joint>

  </xacro:macro>
</robot>
